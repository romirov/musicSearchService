### Token by password
POST http://localhost:8081/auth/realms/otus-musicsearchservice/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

client_id=otus-musicsearchservice&grant_type=password&username=otus-test&password=otus-pass

> {% client.global.set("auth_token", response.body.access_token);
    client.global.set("refresh_token", response.body.refresh_token); %}

### Token by refresh token
POST http://localhost:8081/auth/realms/otus-musicsearchservice/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

client_id=otus-musicsearchservice&grant_type=refresh_token&refresh_token={{refresh_token}}


### Create
POST http://127.0.0.1:8080/v1/topic/create
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "requestType": "create",
  "requestId": "12345",
  "topic": {
    "title": "Неизвестная композиция",
    "description": "Неизвестна композиция неизвестного автора",
    "ownerId": "9435",
    "status": "opened"
  },
  "debug": {
    "mode": "test"
  }
}

### Get unexisted ID
POST http://127.0.0.1:8080/v1/topic/read
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "requestType": "read",
  "requestId": "12345",
  "topic": {
    "id": "99999"
  },
  "debug": {
    "stub": "badId"
  }
}

### Read With Existed id
POST http://127.0.0.1:8080/v1/ad/read
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "requestType": "read",
  "requestId": "12345",
  "topic": {
    "id": "existed"
  },
  "debug": {
    "stub": "success"
  }
}

### Update
POST http://localhost:8080/v1/ad/update
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "requestType": "update",
  "requestId": "666",
  "topic": {
    "id": "updated",
    "status": "closed"
  },
  "debug": {
    "stub": "success"
  }
}

### Update with unexistedId
POST http://localhost:8080/v1/ad/update
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "requestType": "update",
  "requestId": "666",
  "topic": {
    "id": "668"
  },
  "debug": {
    "stub": "badId"
  }
}

### Delete existed
POST http://localhost:8080/v1/ad/delete
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "requestType": "delete",
  "requestId": "deleteId",
  "topic": {
    "id": "existed_id"
  },
  "debug": {
    "stub": "success"
  }
}

### Delete non-existed
POST http://localhost:8080/v1/ad/delete
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "requestType": "delete",
  "requestId": "deleteId_unknown",
  "topic": {
    "id": "unknownId"
  },
  "debug": {
    "stub": "badId"
  }
}

### Search by string
POST http://localhost:8080/v1/ad/search
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "requestType": "search",
  "requestId": "search_1",
  "topicFilter": {
    "searchString": "Неизвестная композиция"
  },
  "debug": {
    "stub": "success"
  }
}

### Search by string with error
POST http://localhost:8080/v1/ad/search
Content-Type: application/json
Authorization: Bearer {{auth_token}}

{
  "requestType": "search",
  "requestId": "search_1",
  "topicFilter": {
    "searchString": "кто тут"
  },
  "debug": {
    "stub": "badSearchString"
  }
}