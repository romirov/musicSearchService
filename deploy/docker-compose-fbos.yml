# Минимальная версия инфраструктуры на базе
# OpenSearch
# OpenSearch Dashboards
# Fluent Bit

version: '3'
services:
  app:
    image: app-ktor:0.0.1
    container_name: app-ktor
    ports:
      - "8080:8080"
    depends_on:
      - fluent-bit
      - keycloak
      - psql
    logging:
      # используемый драйвер логгирования
      driver: "fluentd"
      options:
        # куда посылать лог-сообщения, необходимо чтобы адрес
        # совпадал с настройками плагина forward
        fluentd-address: 0.0.0.0:24224
        # теги используются для маршрутизации лог-сообщений, тема
        # маршрутизации будет рассмотрена ниже
        tag: app.app-ktor

  psql:
    image: postgres
    container_name: postgresql
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - "5432"
    environment:
      POSTGRES_DB: "musicsearchservice"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "musicsearchservice-pass"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d musicsearchservice -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    ports:
      - "8081:8080"
      - "8082:9990"
    volumes:
      - ./keycloak:/tmp
    environment:
      KEYCLOAK_USER: otus
      KEYCLOAK_PASSWORD: otus
      KEYCLOAK_IMPORT: "/tmp/realm-export.json"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.9
    container_name: zookeeper-okkafkaex
    healthcheck:
      test: "[[ $$(echo srvr | nc localhost 2181 | grep -oG 'Mode: standalone') = \"Mode: standalone\" ]]"
      interval: 10s
      timeout: 1s
      retries: 30
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.9
    container_name: kafka-okkafkaex
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: "test $$( /usr/bin/zookeeper-shell zookeeper:2181 get /brokers/ids/1 | grep { ) != ''"
      interval: 3s
      timeout: 2s
      retries: 300
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    ports:
      - "9092:9092"
      - "9091:9091"
      - "9101:9101"

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop-okkafkaex
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

  fluent-bit:
    container_name: fluent-bit
    image: fluent/fluent-bit
    ports:
      # необходимо открыть порты, которые используются плагином forward
      - "24224:24224"
      - "24224:24224/udp"
      - "2020:2020"
    environment:
      - opensearch_host=opensearch
      - opensearch_user=admin
      - opensearch_pass=admin
    volumes:
      - ./volumes/fluent-bit-etc/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./volumes/fluent-bit-etc/parsers.conf:/fluent-bit/etc/parsers.conf

  opensearch:
    container_name: opensearch
    image: opensearchproject/opensearch:latest
    environment:
      - discovery.type=single-node
      - http.port=9200
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - '9200:9200'
      - '9600:9600'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data

  dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
    depends_on:
      - opensearch

volumes:
  opensearch-data:
  postgres_data:
